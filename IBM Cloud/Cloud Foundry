# cloud Foundry Helps you deploy applications,decouples applications from infrastructure,Language- and framework-neutral.
# IBM Cloud CLI is a general-purpose developer tool that provides access to an IBM Cloud account and services through a command-line interface (CLI).
#Cloud Foundry commands are accessible by using ibmcloud cf.
$ ibmcloud login
# login email and password
$ ibmcloud target --cf
# to ease depoyment,we use "kubernetes deployment.js"
# package provide metadata about application,run “npm install”, Node.js pulls dependencies from NPM and places them into “node_modules”
# clone app 
$ git clone https://github.com/IBM-Cloud/get-started-node
# deploy Cloud Foundry apps on IBM Cloud, you need a manifest.yml file
# The .cfignore file prevents cf push from uploading all the files and folders 
$ run ibmcloud cf push
# view details of app
$ ibmcloud cf app GetStartedNode
# To explore how your application directories are structured after they are deployed, use SSH to the deployed application by running the following command
$ ibmcloud cf ssh GetStartedNode
# orgs is  a level of abstraction to manage resources, such as service availability, quota plans, applications and custom domains
# A space provides a shared location for multiple users to deploy multiple applications.Every space belongs to one org. Each org can have multiple spaces.
# Any developer in a space can access and edit the configurations of an application.
# A buildpack is a template and tools that help you resolve your runtime dependencies.
# force and Push the application by running the following command
$ ibmcloud cf push -b BUILDPACK_NAME
# Dependencies are your runtime dependencies, that is, the programs and libraries that Node.js requires to run, [Detect, Supplies, finalize, Release]
$ ibmcloud cf buildpacks
# To use a custom buildpack, you can either:
-Add the buildpack key into the application’s manifest.yml file
-ibmcloud cf push APP_NAME -b https://github.com/cloudfoundry/java-buildpack.git
-To configure the number of instances that you want in manifest.yml, specify the number of instances in the instances key.
$ ibmcloud cf scale APP_NAME -i NUMBER_OF_INSTANCES
# Cloud Foundry manages application orchestration across multiple availability zones and infrastructure.
# If there are multiple instances of your application running, Cloud Foundry automatically load balances across instances.
# The Cloud Foundry platform provides log aggregations. To view events and logs for the deployed application, run the following commands:
$ ibmcloud cf events GetStartedNode
$ ibmcloud cf logs GetStartedNode
# setting routes 
# Domains and routes enable traffic from the internet to flow to and from your application.A route (URL) is composed of a host prefix and a domain.
# Configure the route by using manifest.yml
- route: get-started-2.us-south.cf.appdomain.cloud
$ ibmcloud cf domains [domain of your region]
$ ibmcloud app route-map APP_NAME DOMAIN -n HOST
$ ibmcloud app route-check HOST DOMAIN [--path PATH]
$ibmcloud app route-create SPACE DOMAIN -n HOST [--path PATH]
$ ibmcloud app route-unmap APP_NAME DOMAIN -n HOST --> to unmap a route
$ ibmcloud app route-delete DOMAIN --hostname HOST [--path PATH] [-f] --> delete route

# To view a list of services to which an app is bound, run the following command
$ ibmcloud service list

# To unbind a service, run the following command
$ibmcloud service unbind APP_NAME SERVICE_NAME

# You can view this variable by clicking Runtime on the web UI sidebar and clicking Environment variables, or by running the following command as shown below:
$ ibmcloud cf env APP_NAME


# Exercise getting started with Cloud Foundry app

# create cloud foudry App but create org and space in same region
# domain is eu-gb.cf.appdomain.cloud
# The organization is set by default to the IBMid (email) that you used to log in. The space is set by default to dev
# VISIT URL https://vy301-d14-nodesample.eu-gb.cf.appdomain.cloud/
# Modify and redeploy Cloud Foundry
$ ibmcloud login -a https://cloud.ibm.com -u passcode -p SZI8t8ToQp [one time login]
# resource group
$ ibmcloud target -g Default
$ ibmcloud target --cf-api https://api.eu-gb.cf.cloud.ibm.com -o seiftarek55 -s dev
#Upload and deploy the sample application to push the contents of the current directory as a Cloud Foundry application on IBM Cloud
$ ibmcloud cf push vy301-xxx-nodesample
# Note: Because you already created the application vy301-xxx-nodesample earlier by using the IBM Cloud console, 
pushing the application from the CLI overwrites the contents of the existing application on IBM Cloud.
# Check routes URL https://vy301-d14-nodesample.eu-gb.cf.appdomain.cloud
# Click Resources List to open the Resources List to access your application,
# Runtime tile is 256 MB 
# your application consumes 256 MB of the allotted memory in this IBM Cloud organization.
# Delete the application to clean up your organization for the next exercise
--------------------------------------------------------------------------------
Wrap up
 created an IBM Cloud application with the IBM SDK for Node.js runtime environment.
 You used the IBM Cloud CLI to modify the source code of the sample application on your local workstation 
 redeployed the updated application from your local workstation to your IBM Cloud account by using the IBM Cloud CLI.
# troubleshoot 
#Each organization has a memory quota and number of services quota.
#check that you have enough memory. If you do not have enough memory available, stop the running applications.

# A developer can belong to: Many Orgs and many Spaces.
# What information is required to log in to your IBM Cloud account with the Cloud Foundry command-line interface?
IBM Cloud ID, password, organization, space, API endpoint
#After a service is bound to an application, IBM Cloud restarts the application and provides the credentials of the service to the app by using:
VCAP_SERVICES
# Which of the following must be assigned to an Org to be granted permission to the spaces within the organization: Users
# BoilerPlates is a template and tools that help you resolve your runtime dependencies.
# Which statement on routing is correct Each application can have a single route and one route can serve a single application.

# cloud Foundry 
1- clone repository
$ git clone https://github.com/IBM/node-hello-world
2- change directory
$ cd node-hello-world
# create organization
$ibmcloud account org-create <your-email-address>
# create space 
$ ibmcloud account space-create dev_space -o <your-email-address>
# target Cloud Foundry API endpoint
$ ibmcloud target --cf
$ibmcloud cf push
# delete deployment
$ ibmcloud cf delete node-hello-world-example -f -r





